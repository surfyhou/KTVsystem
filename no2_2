#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
FILE *in,*out;
int str_replace(char* str, char* str_src, char* str_des){   //func to replace a secondry string in the main string
	char *ptr = NULL;
	char buff[256];
	char buff2[256];
	int i = 0;

	if (str != NULL){
		strcpy(buff2, str);
	}
	else{
		printf("str_replace err!\n");
		return -1;
	}
	memset(buff, 0x00, sizeof(buff));
	while ((ptr = strstr(buff2, str_src)) != 0){
		if (ptr - buff2 != 0) memcpy(&buff[i], buff2, ptr - buff2);
		memcpy(&buff[i + ptr - buff2], str_des, strlen(str_des));
		i += ptr - buff2 + strlen(str_des);
		strcpy(buff2, ptr + strlen(str_src));
	}
	strcat(buff, buff2);
	strcpy(str, buff);
	return 0;
}
int main(int argc, char argv[]){
	char _text[10000], scan_str[100], rep_str[100];
	int j = 0, k = 0, sum_of_letters[26] = { 0 };
	if ((in = fopen("C:\\Users\\Surfy\\Desktop\\text.txt", "r+")) == NULL) { //open file includes security check.
		printf("Cannnot open this file, go and F*CK the administrator!\n");
		getchar();
		return 1;
	}
	fgets(_text, 10000, in);
	fclose(in);
//data processing begins
/*	for (int i = 0; _text[i] != '\0'; i++){
		switch (_text[i]){
		case 'a':sum_of_letters[0]++; continue;
		case 'b':sum_of_letters[1]++; continue;
		case 'c':sum_of_letters[2]++; continue;
		case 'd':sum_of_letters[3]++; continue;
		case 'e':sum_of_letters[4]++; continue;
		case 'f':sum_of_letters[5]++; continue;
		case 'g':sum_of_letters[6]++; continue;
		case 'h':sum_of_letters[7]++; continue;
		case 'i':sum_of_letters[8]++; continue;
		case 'j':sum_of_letters[9]++; continue;
		case 'k':sum_of_letters[10]++; continue;
		case 'l':sum_of_letters[11]++; continue;
		case 'm':sum_of_letters[12]++; continue;
		case 'n':sum_of_letters[13]++; continue;
		case 'o':sum_of_letters[14]++; continue;
		case 'p':sum_of_letters[15]++; continue;
		case 'q':sum_of_letters[16]++; continue;
		case 'r':sum_of_letters[17]++; continue;
		case 's':sum_of_letters[18]++; continue;
		case 't':sum_of_letters[19]++; continue;
		case 'u':sum_of_letters[20]++; continue;
		case 'v':sum_of_letters[21]++; continue;
		case 'w':sum_of_letters[22]++; continue;
		case 'x':sum_of_letters[23]++; continue;
		case 'y':sum_of_letters[24]++; continue;
		case 'z':sum_of_letters[25]++; continue;
		case 'A':sum_of_letters[0]++; continue;
		case 'B':sum_of_letters[1]++; continue;
		case 'C':sum_of_letters[2]++; continue;
		case 'D':sum_of_letters[3]++; continue;
		case 'E':sum_of_letters[4]++; continue;
		case 'F':sum_of_letters[5]++; continue;
		case 'G':sum_of_letters[6]++; continue;
		case 'H':sum_of_letters[7]++; continue;
		case 'I':sum_of_letters[8]++; continue;
		case 'J':sum_of_letters[9]++; continue;
		case 'K':sum_of_letters[10]++; continue;
		case 'L':sum_of_letters[11]++; continue;
		case 'M':sum_of_letters[12]++; continue;
		case 'N':sum_of_letters[13]++; continue;
		case 'O':sum_of_letters[14]++; continue;
		case 'P':sum_of_letters[15]++; continue;
		case 'Q':sum_of_letters[16]++; continue;
		case 'R':sum_of_letters[17]++; continue;
		case 'S':sum_of_letters[18]++; continue;
		case 'T':sum_of_letters[19]++; continue;
		case 'U':sum_of_letters[20]++; continue;
		case 'V':sum_of_letters[21]++; continue;
		case 'W':sum_of_letters[22]++; continue;
		case 'X':sum_of_letters[23]++; continue;
		case 'Y':sum_of_letters[24]++; continue;
		case 'Z':sum_of_letters[25]++; continue;
		}
	}
*/
for (int i = 0; _text[i] != '\0'; i++){
	if(_text[i]>=65&&_text[i]<=90){
		sum_of_letters[_text[i]-65]++;
	}
	else if(_text[i]>=97&&_text[i]<=122){
		sum_of_letters[_text[i]-97]++;
	}
}
//data processing ends
	for (int i = 0; i < 26; i++){
		printf("%c appear %d time(s)\n", i + 97, sum_of_letters[i]);
	}
//scan and replace begins
	printf("Please input the word you want to scan for.\n");
	scanf_s("%s%*c", &scan_str,100);
	for (k = 0;k<strlen(_text); k++){
		for (int i = k; (j < strlen(scan_str)) && (_text[i] == scan_str[j]); j++){
			i++;
		}

		if (j == strlen(scan_str)) goto RES;
		j = 0;
	}
	printf("'%s' is not in the file. Press anykey to exit.\n", scan_str);
	getchar();
	exit(1);
RES:	printf("'%s' was found, starts at the %dth letter of file, ends at the %dth letter of file.", scan_str, k+1,k+strlen(scan_str));
	printf("Please input the word you want to replace.\n");
	scanf_s("%s%*c", &rep_str, 100);
	str_replace(_text, scan_str, rep_str);
//scan and replace ends
	if ((out = fopen("C:\\Users\\Surfy\\Desktop\\text.txt", "w")) == NULL) {
		printf("Cannnot create this file, go and F*CK the administrator!\n");
		getchar();
		return 1;
	}
	fprintf(out, "%s", _text);//write replaced text to the file
	fclose(out);
}
